<?xml version="1.0" encoding="ASCII"?>
<function:functionModel xmlns:common="http://www.ibm.com/xmlns/prod/streams/spl/common" xmlns:function="http://www.ibm.com/xmlns/prod/streams/spl/function">
  <function:functionSet>
    <function:headerFileName>Json.h</function:headerFileName>
    <function:cppNamespaceName>com::ibm::streamsx::json</function:cppNamespaceName>
    <function:functions>
      <function:function>
        <function:description>
Convert a tuple to JSON object encoded as a serialized JSON String. Blob, complex and xml values are converted to nulls.
@param t Tuple to be converted to JSON.
@return Tuple encoded as a serialized JSON object.
        </function:description>
        <function:prototype>&lt;tuple T> public rstring tupleToJSON(T t)</function:prototype>
      </function:function>
      <function:function>
        <function:description>
Convert a map to JSON object encoded as a serialized JSON string. Blob, complex and xml values are converted to nulls.
@param m Map containing key-value pairs to be converted to JSON.
@return Serialized JSON object containing all name-value pairs in `m`.
</function:description>
        <function:prototype>&lt;string S, any T> public rstring mapToJSON(map&lt;S, T> m)</function:prototype>
      </function:function>
      <function:function>
        <function:description>
Convert a value to JSON object with a single key encoded as a serialized JSON string. Blob, complex and xml values are converted to nulls.
@param key Key for name-value pair to be converted to JSON.
@param value Value for `key`.
@return Serialized JSON object containing single name-value pair.
</function:description>
        <function:prototype>&lt;string S, any T> public rstring toJSON(S key, T value)</function:prototype>
      </function:function>
    </function:functions>
    <function:dependencies>
      <function:library>
        <common:description></common:description>
        <common:managedLibrary>
          <common:includePath>../../impl/include</common:includePath>
        </common:managedLibrary>
      </function:library>
    </function:dependencies>
  </function:functionSet>
</function:functionModel>
