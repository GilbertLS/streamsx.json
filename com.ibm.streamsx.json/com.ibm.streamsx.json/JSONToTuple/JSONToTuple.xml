<?xml version="1.0" encoding="UTF-8"?><operatorModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/operator" xmlns:cmn="http://www.ibm.com/xmlns/prod/streams/spl/common" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.ibm.com/xmlns/prod/streams/spl/operator operatorModel.xsd">
  <!--DO NOT EDIT THIS FILE - it is machine generated-->
  <javaOperatorModel>
    <!--Generated from com.ibm.streamsx.json.JSONToTuple in impl/lib/com.ibm.streamsx.json.jar at Mon Apr 14 13:14:13 EDT 2014-->
    <context>
      <description>This operator converts JSON strings into SPL Tuples. The tuple structure is expected to match the JSON schema. A subset of the attributes can be specified as well.  Only those attributes that are present in the Tuple schema and JSON input will be converted. All other attributes will be ignored. If an invalid JSON string is found in the input, the operator will fail.  This behavior can be overridden by specifying the optional output port or by specifying the "ignoreParsingError" parameter. Limitations: BLOB, MAP and COMPLEX attribute types are not supported in the output tuple schema and will be ignored.</description>
      <metrics/>
      <executionSettings>
        <className>com.ibm.streamsx.json.JSONToTuple</className>
      </executionSettings>
      <libraryDependencies>
        <library>
          <cmn:description>Operator class library</cmn:description>
          <cmn:managedLibrary>
            <cmn:libPath>../../impl/lib/com.ibm.streamsx.json.jar</cmn:libPath>
            <cmn:libPath>@STREAMS_INSTALL@/ext/lib/JSON4J.jar</cmn:libPath>
          </cmn:managedLibrary>
        </library>
      </libraryDependencies>
    </context>
    <parameters>
      <parameter>
        <name>copyAttribute</name>
        <description>Name of the input stream attributes to copy over to the output stream</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>-1</cardinality>
      </parameter>
      <parameter>
        <name>jsonStringAttribute</name>
        <description>Name of the input stream attribute which contains the JSON string. This attribute must be of USTRING or RSTRING type. Default is jsonString</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>jsonStringOutputAttribute</name>
        <description>Name of the output stream attribute which should be populated with the incoming JSON string. This attribute must be of USTRING or RSTRING type. Default is to ignore.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>targetAttribute</name>
        <description>Name of the output stream attribute which should be considered as the root of the JSON tuple to be populated. Default is the entite tuple root.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
    </parameters>
    <inputPorts>
      <inputPortSet>
        <description/>
        <windowingDescription/>
        <windowingMode>NonWindowed</windowingMode>
        <windowPunctuationInputMode>Oblivious</windowPunctuationInputMode>
        <controlPort>false</controlPort>
        <cardinality>1</cardinality>
        <optional>false</optional>
      </inputPortSet>
    </inputPorts>
    <outputPorts>
      <outputPortSet>
        <description/>
        <windowPunctuationOutputMode>Free</windowPunctuationOutputMode>
        <cardinality>1</cardinality>
        <optional>false</optional>
      </outputPortSet>
      <outputPortSet>
        <description/>
        <windowPunctuationOutputMode>Free</windowPunctuationOutputMode>
        <cardinality>1</cardinality>
        <optional>true</optional>
      </outputPortSet>
    </outputPorts>
  </javaOperatorModel>
</operatorModel>